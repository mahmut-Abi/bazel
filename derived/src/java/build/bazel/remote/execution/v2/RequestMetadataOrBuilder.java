// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build/bazel/remote/execution/v2/remote_execution.proto

package build.bazel.remote.execution.v2;

public interface RequestMetadataOrBuilder extends
    // @@protoc_insertion_point(interface_extends:build.bazel.remote.execution.v2.RequestMetadata)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The details for the tool invoking the requests.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.ToolDetails tool_details = 1;</code>
   * @return Whether the toolDetails field is set.
   */
  boolean hasToolDetails();
  /**
   * <pre>
   * The details for the tool invoking the requests.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.ToolDetails tool_details = 1;</code>
   * @return The toolDetails.
   */
  build.bazel.remote.execution.v2.ToolDetails getToolDetails();
  /**
   * <pre>
   * The details for the tool invoking the requests.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.ToolDetails tool_details = 1;</code>
   */
  build.bazel.remote.execution.v2.ToolDetailsOrBuilder getToolDetailsOrBuilder();

  /**
   * <pre>
   * An identifier that ties multiple requests to the same action.
   * For example, multiple requests to the CAS, Action Cache, and Execution
   * API are used in order to compile foo.cc.
   * </pre>
   *
   * <code>string action_id = 2;</code>
   * @return The actionId.
   */
  java.lang.String getActionId();
  /**
   * <pre>
   * An identifier that ties multiple requests to the same action.
   * For example, multiple requests to the CAS, Action Cache, and Execution
   * API are used in order to compile foo.cc.
   * </pre>
   *
   * <code>string action_id = 2;</code>
   * @return The bytes for actionId.
   */
  com.google.protobuf.ByteString
      getActionIdBytes();

  /**
   * <pre>
   * An identifier that ties multiple actions together to a final result.
   * For example, multiple actions are required to build and run foo_test.
   * </pre>
   *
   * <code>string tool_invocation_id = 3;</code>
   * @return The toolInvocationId.
   */
  java.lang.String getToolInvocationId();
  /**
   * <pre>
   * An identifier that ties multiple actions together to a final result.
   * For example, multiple actions are required to build and run foo_test.
   * </pre>
   *
   * <code>string tool_invocation_id = 3;</code>
   * @return The bytes for toolInvocationId.
   */
  com.google.protobuf.ByteString
      getToolInvocationIdBytes();

  /**
   * <pre>
   * An identifier to tie multiple tool invocations together. For example,
   * runs of foo_test, bar_test and baz_test on a post-submit of a given patch.
   * </pre>
   *
   * <code>string correlated_invocations_id = 4;</code>
   * @return The correlatedInvocationsId.
   */
  java.lang.String getCorrelatedInvocationsId();
  /**
   * <pre>
   * An identifier to tie multiple tool invocations together. For example,
   * runs of foo_test, bar_test and baz_test on a post-submit of a given patch.
   * </pre>
   *
   * <code>string correlated_invocations_id = 4;</code>
   * @return The bytes for correlatedInvocationsId.
   */
  com.google.protobuf.ByteString
      getCorrelatedInvocationsIdBytes();

  /**
   * <pre>
   * A brief description of the kind of action, for example, CppCompile or GoLink.
   * There is no standard agreed set of values for this, and they are expected to vary between different client tools.
   * </pre>
   *
   * <code>string action_mnemonic = 5;</code>
   * @return The actionMnemonic.
   */
  java.lang.String getActionMnemonic();
  /**
   * <pre>
   * A brief description of the kind of action, for example, CppCompile or GoLink.
   * There is no standard agreed set of values for this, and they are expected to vary between different client tools.
   * </pre>
   *
   * <code>string action_mnemonic = 5;</code>
   * @return The bytes for actionMnemonic.
   */
  com.google.protobuf.ByteString
      getActionMnemonicBytes();

  /**
   * <pre>
   * An identifier for the target which produced this action.
   * No guarantees are made around how many actions may relate to a single target.
   * </pre>
   *
   * <code>string target_id = 6;</code>
   * @return The targetId.
   */
  java.lang.String getTargetId();
  /**
   * <pre>
   * An identifier for the target which produced this action.
   * No guarantees are made around how many actions may relate to a single target.
   * </pre>
   *
   * <code>string target_id = 6;</code>
   * @return The bytes for targetId.
   */
  com.google.protobuf.ByteString
      getTargetIdBytes();

  /**
   * <pre>
   * An identifier for the configuration in which the target was built,
   * e.g. for differentiating building host tools or different target platforms.
   * There is no expectation that this value will have any particular structure,
   * or equality across invocations, though some client tools may offer these guarantees.
   * </pre>
   *
   * <code>string configuration_id = 7;</code>
   * @return The configurationId.
   */
  java.lang.String getConfigurationId();
  /**
   * <pre>
   * An identifier for the configuration in which the target was built,
   * e.g. for differentiating building host tools or different target platforms.
   * There is no expectation that this value will have any particular structure,
   * or equality across invocations, though some client tools may offer these guarantees.
   * </pre>
   *
   * <code>string configuration_id = 7;</code>
   * @return The bytes for configurationId.
   */
  com.google.protobuf.ByteString
      getConfigurationIdBytes();
}
