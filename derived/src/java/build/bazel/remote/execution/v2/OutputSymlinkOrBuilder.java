// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build/bazel/remote/execution/v2/remote_execution.proto

package build.bazel.remote.execution.v2;

public interface OutputSymlinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:build.bazel.remote.execution.v2.OutputSymlink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The full path of the symlink relative to the working directory, including the
   * filename. The path separator is a forward slash `/`. Since this is a
   * relative path, it MUST NOT begin with a leading forward slash.
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The path.
   */
  java.lang.String getPath();
  /**
   * <pre>
   * The full path of the symlink relative to the working directory, including the
   * filename. The path separator is a forward slash `/`. Since this is a
   * relative path, it MUST NOT begin with a leading forward slash.
   * </pre>
   *
   * <code>string path = 1;</code>
   * @return The bytes for path.
   */
  com.google.protobuf.ByteString
      getPathBytes();

  /**
   * <pre>
   * The target path of the symlink. The path separator is a forward slash `/`.
   * The target path can be relative to the parent directory of the symlink or
   * it can be an absolute path starting with `/`. Support for absolute paths
   * can be checked using the [Capabilities][build.bazel.remote.execution.v2.Capabilities]
   * API. `..` components are allowed anywhere in the target path.
   * </pre>
   *
   * <code>string target = 2;</code>
   * @return The target.
   */
  java.lang.String getTarget();
  /**
   * <pre>
   * The target path of the symlink. The path separator is a forward slash `/`.
   * The target path can be relative to the parent directory of the symlink or
   * it can be an absolute path starting with `/`. Support for absolute paths
   * can be checked using the [Capabilities][build.bazel.remote.execution.v2.Capabilities]
   * API. `..` components are allowed anywhere in the target path.
   * </pre>
   *
   * <code>string target = 2;</code>
   * @return The bytes for target.
   */
  com.google.protobuf.ByteString
      getTargetBytes();

  /**
   * <code>.build.bazel.remote.execution.v2.NodeProperties node_properties = 4;</code>
   * @return Whether the nodeProperties field is set.
   */
  boolean hasNodeProperties();
  /**
   * <code>.build.bazel.remote.execution.v2.NodeProperties node_properties = 4;</code>
   * @return The nodeProperties.
   */
  build.bazel.remote.execution.v2.NodeProperties getNodeProperties();
  /**
   * <code>.build.bazel.remote.execution.v2.NodeProperties node_properties = 4;</code>
   */
  build.bazel.remote.execution.v2.NodePropertiesOrBuilder getNodePropertiesOrBuilder();
}
