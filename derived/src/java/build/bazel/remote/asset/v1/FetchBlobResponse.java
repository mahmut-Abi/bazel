// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build/bazel/remote/asset/v1/remote_asset.proto

package build.bazel.remote.asset.v1;

/**
 * <pre>
 * A response message for
 * [Fetch.FetchBlob][build.bazel.remote.asset.v1.Fetch.FetchBlob].
 * </pre>
 *
 * Protobuf type {@code build.bazel.remote.asset.v1.FetchBlobResponse}
 */
public final class FetchBlobResponse extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:build.bazel.remote.asset.v1.FetchBlobResponse)
    FetchBlobResponseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FetchBlobResponse.newBuilder() to construct.
  private FetchBlobResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FetchBlobResponse() {
    uri_ = "";
    qualifiers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new FetchBlobResponse();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FetchBlobResponse(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.rpc.Status.Builder subBuilder = null;
            if (status_ != null) {
              subBuilder = status_.toBuilder();
            }
            status_ = input.readMessage(com.google.rpc.Status.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(status_);
              status_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            uri_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              qualifiers_ = new java.util.ArrayList<build.bazel.remote.asset.v1.Qualifier>();
              mutable_bitField0_ |= 0x00000001;
            }
            qualifiers_.add(
                input.readMessage(build.bazel.remote.asset.v1.Qualifier.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (expiresAt_ != null) {
              subBuilder = expiresAt_.toBuilder();
            }
            expiresAt_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(expiresAt_);
              expiresAt_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            build.bazel.remote.execution.v2.Digest.Builder subBuilder = null;
            if (blobDigest_ != null) {
              subBuilder = blobDigest_.toBuilder();
            }
            blobDigest_ = input.readMessage(build.bazel.remote.execution.v2.Digest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(blobDigest_);
              blobDigest_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        qualifiers_ = java.util.Collections.unmodifiableList(qualifiers_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return build.bazel.remote.asset.v1.RemoteAssetProto.internal_static_build_bazel_remote_asset_v1_FetchBlobResponse_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return build.bazel.remote.asset.v1.RemoteAssetProto.internal_static_build_bazel_remote_asset_v1_FetchBlobResponse_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            build.bazel.remote.asset.v1.FetchBlobResponse.class, build.bazel.remote.asset.v1.FetchBlobResponse.Builder.class);
  }

  public static final int STATUS_FIELD_NUMBER = 1;
  private com.google.rpc.Status status_;
  /**
   * <pre>
   * If the status has a code other than `OK`, it indicates that the operation
   * was unable to be completed for reasons outside the servers' control.
   * The possible fetch errors include:
   * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
   *   specified timeout.
   * * `NOT_FOUND`: The requested asset was not found at the specified location.
   * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
   *   requested an asset from a disallowed origin.
   * * `ABORTED`: The operation could not be completed, typically due to a
   *   failed consistency check.
   * </pre>
   *
   * <code>.google.rpc.Status status = 1;</code>
   * @return Whether the status field is set.
   */
  @java.lang.Override
  public boolean hasStatus() {
    return status_ != null;
  }
  /**
   * <pre>
   * If the status has a code other than `OK`, it indicates that the operation
   * was unable to be completed for reasons outside the servers' control.
   * The possible fetch errors include:
   * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
   *   specified timeout.
   * * `NOT_FOUND`: The requested asset was not found at the specified location.
   * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
   *   requested an asset from a disallowed origin.
   * * `ABORTED`: The operation could not be completed, typically due to a
   *   failed consistency check.
   * </pre>
   *
   * <code>.google.rpc.Status status = 1;</code>
   * @return The status.
   */
  @java.lang.Override
  public com.google.rpc.Status getStatus() {
    return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
  }
  /**
   * <pre>
   * If the status has a code other than `OK`, it indicates that the operation
   * was unable to be completed for reasons outside the servers' control.
   * The possible fetch errors include:
   * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
   *   specified timeout.
   * * `NOT_FOUND`: The requested asset was not found at the specified location.
   * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
   *   requested an asset from a disallowed origin.
   * * `ABORTED`: The operation could not be completed, typically due to a
   *   failed consistency check.
   * </pre>
   *
   * <code>.google.rpc.Status status = 1;</code>
   */
  @java.lang.Override
  public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
    return getStatus();
  }

  public static final int URI_FIELD_NUMBER = 2;
  private volatile java.lang.Object uri_;
  /**
   * <pre>
   * The uri from the request that resulted in a successful retrieval, or from
   * which the error indicated in `status` was obtained.
   * </pre>
   *
   * <code>string uri = 2;</code>
   * @return The uri.
   */
  @java.lang.Override
  public java.lang.String getUri() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      uri_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The uri from the request that resulted in a successful retrieval, or from
   * which the error indicated in `status` was obtained.
   * </pre>
   *
   * <code>string uri = 2;</code>
   * @return The bytes for uri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUALIFIERS_FIELD_NUMBER = 3;
  private java.util.List<build.bazel.remote.asset.v1.Qualifier> qualifiers_;
  /**
   * <pre>
   * Any qualifiers known to the server and of interest to clients.
   * </pre>
   *
   * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<build.bazel.remote.asset.v1.Qualifier> getQualifiersList() {
    return qualifiers_;
  }
  /**
   * <pre>
   * Any qualifiers known to the server and of interest to clients.
   * </pre>
   *
   * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends build.bazel.remote.asset.v1.QualifierOrBuilder> 
      getQualifiersOrBuilderList() {
    return qualifiers_;
  }
  /**
   * <pre>
   * Any qualifiers known to the server and of interest to clients.
   * </pre>
   *
   * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
   */
  @java.lang.Override
  public int getQualifiersCount() {
    return qualifiers_.size();
  }
  /**
   * <pre>
   * Any qualifiers known to the server and of interest to clients.
   * </pre>
   *
   * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
   */
  @java.lang.Override
  public build.bazel.remote.asset.v1.Qualifier getQualifiers(int index) {
    return qualifiers_.get(index);
  }
  /**
   * <pre>
   * Any qualifiers known to the server and of interest to clients.
   * </pre>
   *
   * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
   */
  @java.lang.Override
  public build.bazel.remote.asset.v1.QualifierOrBuilder getQualifiersOrBuilder(
      int index) {
    return qualifiers_.get(index);
  }

  public static final int EXPIRES_AT_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp expiresAt_;
  /**
   * <pre>
   * A minimum timestamp the content is expected to be available through.
   * Servers *MAY* omit this field, if not known with confidence.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expires_at = 4;</code>
   * @return Whether the expiresAt field is set.
   */
  @java.lang.Override
  public boolean hasExpiresAt() {
    return expiresAt_ != null;
  }
  /**
   * <pre>
   * A minimum timestamp the content is expected to be available through.
   * Servers *MAY* omit this field, if not known with confidence.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expires_at = 4;</code>
   * @return The expiresAt.
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getExpiresAt() {
    return expiresAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiresAt_;
  }
  /**
   * <pre>
   * A minimum timestamp the content is expected to be available through.
   * Servers *MAY* omit this field, if not known with confidence.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expires_at = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.TimestampOrBuilder getExpiresAtOrBuilder() {
    return getExpiresAt();
  }

  public static final int BLOB_DIGEST_FIELD_NUMBER = 5;
  private build.bazel.remote.execution.v2.Digest blobDigest_;
  /**
   * <pre>
   * The result of the fetch, if the status had code `OK`.
   * The digest of the file's contents, available for download through the CAS.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
   * @return Whether the blobDigest field is set.
   */
  @java.lang.Override
  public boolean hasBlobDigest() {
    return blobDigest_ != null;
  }
  /**
   * <pre>
   * The result of the fetch, if the status had code `OK`.
   * The digest of the file's contents, available for download through the CAS.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
   * @return The blobDigest.
   */
  @java.lang.Override
  public build.bazel.remote.execution.v2.Digest getBlobDigest() {
    return blobDigest_ == null ? build.bazel.remote.execution.v2.Digest.getDefaultInstance() : blobDigest_;
  }
  /**
   * <pre>
   * The result of the fetch, if the status had code `OK`.
   * The digest of the file's contents, available for download through the CAS.
   * </pre>
   *
   * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
   */
  @java.lang.Override
  public build.bazel.remote.execution.v2.DigestOrBuilder getBlobDigestOrBuilder() {
    return getBlobDigest();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (status_ != null) {
      output.writeMessage(1, getStatus());
    }
    if (!getUriBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, uri_);
    }
    for (int i = 0; i < qualifiers_.size(); i++) {
      output.writeMessage(3, qualifiers_.get(i));
    }
    if (expiresAt_ != null) {
      output.writeMessage(4, getExpiresAt());
    }
    if (blobDigest_ != null) {
      output.writeMessage(5, getBlobDigest());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (status_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getStatus());
    }
    if (!getUriBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, uri_);
    }
    for (int i = 0; i < qualifiers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, qualifiers_.get(i));
    }
    if (expiresAt_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getExpiresAt());
    }
    if (blobDigest_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getBlobDigest());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof build.bazel.remote.asset.v1.FetchBlobResponse)) {
      return super.equals(obj);
    }
    build.bazel.remote.asset.v1.FetchBlobResponse other = (build.bazel.remote.asset.v1.FetchBlobResponse) obj;

    if (hasStatus() != other.hasStatus()) return false;
    if (hasStatus()) {
      if (!getStatus()
          .equals(other.getStatus())) return false;
    }
    if (!getUri()
        .equals(other.getUri())) return false;
    if (!getQualifiersList()
        .equals(other.getQualifiersList())) return false;
    if (hasExpiresAt() != other.hasExpiresAt()) return false;
    if (hasExpiresAt()) {
      if (!getExpiresAt()
          .equals(other.getExpiresAt())) return false;
    }
    if (hasBlobDigest() != other.hasBlobDigest()) return false;
    if (hasBlobDigest()) {
      if (!getBlobDigest()
          .equals(other.getBlobDigest())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasStatus()) {
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getStatus().hashCode();
    }
    hash = (37 * hash) + URI_FIELD_NUMBER;
    hash = (53 * hash) + getUri().hashCode();
    if (getQualifiersCount() > 0) {
      hash = (37 * hash) + QUALIFIERS_FIELD_NUMBER;
      hash = (53 * hash) + getQualifiersList().hashCode();
    }
    if (hasExpiresAt()) {
      hash = (37 * hash) + EXPIRES_AT_FIELD_NUMBER;
      hash = (53 * hash) + getExpiresAt().hashCode();
    }
    if (hasBlobDigest()) {
      hash = (37 * hash) + BLOB_DIGEST_FIELD_NUMBER;
      hash = (53 * hash) + getBlobDigest().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static build.bazel.remote.asset.v1.FetchBlobResponse parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(build.bazel.remote.asset.v1.FetchBlobResponse prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A response message for
   * [Fetch.FetchBlob][build.bazel.remote.asset.v1.Fetch.FetchBlob].
   * </pre>
   *
   * Protobuf type {@code build.bazel.remote.asset.v1.FetchBlobResponse}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:build.bazel.remote.asset.v1.FetchBlobResponse)
      build.bazel.remote.asset.v1.FetchBlobResponseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return build.bazel.remote.asset.v1.RemoteAssetProto.internal_static_build_bazel_remote_asset_v1_FetchBlobResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return build.bazel.remote.asset.v1.RemoteAssetProto.internal_static_build_bazel_remote_asset_v1_FetchBlobResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              build.bazel.remote.asset.v1.FetchBlobResponse.class, build.bazel.remote.asset.v1.FetchBlobResponse.Builder.class);
    }

    // Construct using build.bazel.remote.asset.v1.FetchBlobResponse.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getQualifiersFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (statusBuilder_ == null) {
        status_ = null;
      } else {
        status_ = null;
        statusBuilder_ = null;
      }
      uri_ = "";

      if (qualifiersBuilder_ == null) {
        qualifiers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        qualifiersBuilder_.clear();
      }
      if (expiresAtBuilder_ == null) {
        expiresAt_ = null;
      } else {
        expiresAt_ = null;
        expiresAtBuilder_ = null;
      }
      if (blobDigestBuilder_ == null) {
        blobDigest_ = null;
      } else {
        blobDigest_ = null;
        blobDigestBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return build.bazel.remote.asset.v1.RemoteAssetProto.internal_static_build_bazel_remote_asset_v1_FetchBlobResponse_descriptor;
    }

    @java.lang.Override
    public build.bazel.remote.asset.v1.FetchBlobResponse getDefaultInstanceForType() {
      return build.bazel.remote.asset.v1.FetchBlobResponse.getDefaultInstance();
    }

    @java.lang.Override
    public build.bazel.remote.asset.v1.FetchBlobResponse build() {
      build.bazel.remote.asset.v1.FetchBlobResponse result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public build.bazel.remote.asset.v1.FetchBlobResponse buildPartial() {
      build.bazel.remote.asset.v1.FetchBlobResponse result = new build.bazel.remote.asset.v1.FetchBlobResponse(this);
      int from_bitField0_ = bitField0_;
      if (statusBuilder_ == null) {
        result.status_ = status_;
      } else {
        result.status_ = statusBuilder_.build();
      }
      result.uri_ = uri_;
      if (qualifiersBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          qualifiers_ = java.util.Collections.unmodifiableList(qualifiers_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.qualifiers_ = qualifiers_;
      } else {
        result.qualifiers_ = qualifiersBuilder_.build();
      }
      if (expiresAtBuilder_ == null) {
        result.expiresAt_ = expiresAt_;
      } else {
        result.expiresAt_ = expiresAtBuilder_.build();
      }
      if (blobDigestBuilder_ == null) {
        result.blobDigest_ = blobDigest_;
      } else {
        result.blobDigest_ = blobDigestBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof build.bazel.remote.asset.v1.FetchBlobResponse) {
        return mergeFrom((build.bazel.remote.asset.v1.FetchBlobResponse)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(build.bazel.remote.asset.v1.FetchBlobResponse other) {
      if (other == build.bazel.remote.asset.v1.FetchBlobResponse.getDefaultInstance()) return this;
      if (other.hasStatus()) {
        mergeStatus(other.getStatus());
      }
      if (!other.getUri().isEmpty()) {
        uri_ = other.uri_;
        onChanged();
      }
      if (qualifiersBuilder_ == null) {
        if (!other.qualifiers_.isEmpty()) {
          if (qualifiers_.isEmpty()) {
            qualifiers_ = other.qualifiers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureQualifiersIsMutable();
            qualifiers_.addAll(other.qualifiers_);
          }
          onChanged();
        }
      } else {
        if (!other.qualifiers_.isEmpty()) {
          if (qualifiersBuilder_.isEmpty()) {
            qualifiersBuilder_.dispose();
            qualifiersBuilder_ = null;
            qualifiers_ = other.qualifiers_;
            bitField0_ = (bitField0_ & ~0x00000001);
            qualifiersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getQualifiersFieldBuilder() : null;
          } else {
            qualifiersBuilder_.addAllMessages(other.qualifiers_);
          }
        }
      }
      if (other.hasExpiresAt()) {
        mergeExpiresAt(other.getExpiresAt());
      }
      if (other.hasBlobDigest()) {
        mergeBlobDigest(other.getBlobDigest());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      build.bazel.remote.asset.v1.FetchBlobResponse parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (build.bazel.remote.asset.v1.FetchBlobResponse) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.rpc.Status status_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> statusBuilder_;
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     * @return Whether the status field is set.
     */
    public boolean hasStatus() {
      return statusBuilder_ != null || status_ != null;
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     * @return The status.
     */
    public com.google.rpc.Status getStatus() {
      if (statusBuilder_ == null) {
        return status_ == null ? com.google.rpc.Status.getDefaultInstance() : status_;
      } else {
        return statusBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    public Builder setStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        status_ = value;
        onChanged();
      } else {
        statusBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    public Builder setStatus(
        com.google.rpc.Status.Builder builderForValue) {
      if (statusBuilder_ == null) {
        status_ = builderForValue.build();
        onChanged();
      } else {
        statusBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    public Builder mergeStatus(com.google.rpc.Status value) {
      if (statusBuilder_ == null) {
        if (status_ != null) {
          status_ =
            com.google.rpc.Status.newBuilder(status_).mergeFrom(value).buildPartial();
        } else {
          status_ = value;
        }
        onChanged();
      } else {
        statusBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    public Builder clearStatus() {
      if (statusBuilder_ == null) {
        status_ = null;
        onChanged();
      } else {
        status_ = null;
        statusBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    public com.google.rpc.Status.Builder getStatusBuilder() {
      
      onChanged();
      return getStatusFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    public com.google.rpc.StatusOrBuilder getStatusOrBuilder() {
      if (statusBuilder_ != null) {
        return statusBuilder_.getMessageOrBuilder();
      } else {
        return status_ == null ?
            com.google.rpc.Status.getDefaultInstance() : status_;
      }
    }
    /**
     * <pre>
     * If the status has a code other than `OK`, it indicates that the operation
     * was unable to be completed for reasons outside the servers' control.
     * The possible fetch errors include:
     * * `DEADLINE_EXCEEDED`: The operation could not be completed within the
     *   specified timeout.
     * * `NOT_FOUND`: The requested asset was not found at the specified location.
     * * `PERMISSION_DENIED`: The request was rejected by a remote server, or
     *   requested an asset from a disallowed origin.
     * * `ABORTED`: The operation could not be completed, typically due to a
     *   failed consistency check.
     * </pre>
     *
     * <code>.google.rpc.Status status = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder> 
        getStatusFieldBuilder() {
      if (statusBuilder_ == null) {
        statusBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.rpc.Status, com.google.rpc.Status.Builder, com.google.rpc.StatusOrBuilder>(
                getStatus(),
                getParentForChildren(),
                isClean());
        status_ = null;
      }
      return statusBuilder_;
    }

    private java.lang.Object uri_ = "";
    /**
     * <pre>
     * The uri from the request that resulted in a successful retrieval, or from
     * which the error indicated in `status` was obtained.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @return The uri.
     */
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uri_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The uri from the request that resulted in a successful retrieval, or from
     * which the error indicated in `status` was obtained.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @return The bytes for uri.
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The uri from the request that resulted in a successful retrieval, or from
     * which the error indicated in `status` was obtained.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      uri_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The uri from the request that resulted in a successful retrieval, or from
     * which the error indicated in `status` was obtained.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      
      uri_ = getDefaultInstance().getUri();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The uri from the request that resulted in a successful retrieval, or from
     * which the error indicated in `status` was obtained.
     * </pre>
     *
     * <code>string uri = 2;</code>
     * @param value The bytes for uri to set.
     * @return This builder for chaining.
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      uri_ = value;
      onChanged();
      return this;
    }

    private java.util.List<build.bazel.remote.asset.v1.Qualifier> qualifiers_ =
      java.util.Collections.emptyList();
    private void ensureQualifiersIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        qualifiers_ = new java.util.ArrayList<build.bazel.remote.asset.v1.Qualifier>(qualifiers_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        build.bazel.remote.asset.v1.Qualifier, build.bazel.remote.asset.v1.Qualifier.Builder, build.bazel.remote.asset.v1.QualifierOrBuilder> qualifiersBuilder_;

    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public java.util.List<build.bazel.remote.asset.v1.Qualifier> getQualifiersList() {
      if (qualifiersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(qualifiers_);
      } else {
        return qualifiersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public int getQualifiersCount() {
      if (qualifiersBuilder_ == null) {
        return qualifiers_.size();
      } else {
        return qualifiersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public build.bazel.remote.asset.v1.Qualifier getQualifiers(int index) {
      if (qualifiersBuilder_ == null) {
        return qualifiers_.get(index);
      } else {
        return qualifiersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder setQualifiers(
        int index, build.bazel.remote.asset.v1.Qualifier value) {
      if (qualifiersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQualifiersIsMutable();
        qualifiers_.set(index, value);
        onChanged();
      } else {
        qualifiersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder setQualifiers(
        int index, build.bazel.remote.asset.v1.Qualifier.Builder builderForValue) {
      if (qualifiersBuilder_ == null) {
        ensureQualifiersIsMutable();
        qualifiers_.set(index, builderForValue.build());
        onChanged();
      } else {
        qualifiersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder addQualifiers(build.bazel.remote.asset.v1.Qualifier value) {
      if (qualifiersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQualifiersIsMutable();
        qualifiers_.add(value);
        onChanged();
      } else {
        qualifiersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder addQualifiers(
        int index, build.bazel.remote.asset.v1.Qualifier value) {
      if (qualifiersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureQualifiersIsMutable();
        qualifiers_.add(index, value);
        onChanged();
      } else {
        qualifiersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder addQualifiers(
        build.bazel.remote.asset.v1.Qualifier.Builder builderForValue) {
      if (qualifiersBuilder_ == null) {
        ensureQualifiersIsMutable();
        qualifiers_.add(builderForValue.build());
        onChanged();
      } else {
        qualifiersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder addQualifiers(
        int index, build.bazel.remote.asset.v1.Qualifier.Builder builderForValue) {
      if (qualifiersBuilder_ == null) {
        ensureQualifiersIsMutable();
        qualifiers_.add(index, builderForValue.build());
        onChanged();
      } else {
        qualifiersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder addAllQualifiers(
        java.lang.Iterable<? extends build.bazel.remote.asset.v1.Qualifier> values) {
      if (qualifiersBuilder_ == null) {
        ensureQualifiersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, qualifiers_);
        onChanged();
      } else {
        qualifiersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder clearQualifiers() {
      if (qualifiersBuilder_ == null) {
        qualifiers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        qualifiersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public Builder removeQualifiers(int index) {
      if (qualifiersBuilder_ == null) {
        ensureQualifiersIsMutable();
        qualifiers_.remove(index);
        onChanged();
      } else {
        qualifiersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public build.bazel.remote.asset.v1.Qualifier.Builder getQualifiersBuilder(
        int index) {
      return getQualifiersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public build.bazel.remote.asset.v1.QualifierOrBuilder getQualifiersOrBuilder(
        int index) {
      if (qualifiersBuilder_ == null) {
        return qualifiers_.get(index);  } else {
        return qualifiersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public java.util.List<? extends build.bazel.remote.asset.v1.QualifierOrBuilder> 
         getQualifiersOrBuilderList() {
      if (qualifiersBuilder_ != null) {
        return qualifiersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(qualifiers_);
      }
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public build.bazel.remote.asset.v1.Qualifier.Builder addQualifiersBuilder() {
      return getQualifiersFieldBuilder().addBuilder(
          build.bazel.remote.asset.v1.Qualifier.getDefaultInstance());
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public build.bazel.remote.asset.v1.Qualifier.Builder addQualifiersBuilder(
        int index) {
      return getQualifiersFieldBuilder().addBuilder(
          index, build.bazel.remote.asset.v1.Qualifier.getDefaultInstance());
    }
    /**
     * <pre>
     * Any qualifiers known to the server and of interest to clients.
     * </pre>
     *
     * <code>repeated .build.bazel.remote.asset.v1.Qualifier qualifiers = 3;</code>
     */
    public java.util.List<build.bazel.remote.asset.v1.Qualifier.Builder> 
         getQualifiersBuilderList() {
      return getQualifiersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        build.bazel.remote.asset.v1.Qualifier, build.bazel.remote.asset.v1.Qualifier.Builder, build.bazel.remote.asset.v1.QualifierOrBuilder> 
        getQualifiersFieldBuilder() {
      if (qualifiersBuilder_ == null) {
        qualifiersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            build.bazel.remote.asset.v1.Qualifier, build.bazel.remote.asset.v1.Qualifier.Builder, build.bazel.remote.asset.v1.QualifierOrBuilder>(
                qualifiers_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        qualifiers_ = null;
      }
      return qualifiersBuilder_;
    }

    private com.google.protobuf.Timestamp expiresAt_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> expiresAtBuilder_;
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     * @return Whether the expiresAt field is set.
     */
    public boolean hasExpiresAt() {
      return expiresAtBuilder_ != null || expiresAt_ != null;
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     * @return The expiresAt.
     */
    public com.google.protobuf.Timestamp getExpiresAt() {
      if (expiresAtBuilder_ == null) {
        return expiresAt_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiresAt_;
      } else {
        return expiresAtBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    public Builder setExpiresAt(com.google.protobuf.Timestamp value) {
      if (expiresAtBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        expiresAt_ = value;
        onChanged();
      } else {
        expiresAtBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    public Builder setExpiresAt(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (expiresAtBuilder_ == null) {
        expiresAt_ = builderForValue.build();
        onChanged();
      } else {
        expiresAtBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    public Builder mergeExpiresAt(com.google.protobuf.Timestamp value) {
      if (expiresAtBuilder_ == null) {
        if (expiresAt_ != null) {
          expiresAt_ =
            com.google.protobuf.Timestamp.newBuilder(expiresAt_).mergeFrom(value).buildPartial();
        } else {
          expiresAt_ = value;
        }
        onChanged();
      } else {
        expiresAtBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    public Builder clearExpiresAt() {
      if (expiresAtBuilder_ == null) {
        expiresAt_ = null;
        onChanged();
      } else {
        expiresAt_ = null;
        expiresAtBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    public com.google.protobuf.Timestamp.Builder getExpiresAtBuilder() {
      
      onChanged();
      return getExpiresAtFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getExpiresAtOrBuilder() {
      if (expiresAtBuilder_ != null) {
        return expiresAtBuilder_.getMessageOrBuilder();
      } else {
        return expiresAt_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : expiresAt_;
      }
    }
    /**
     * <pre>
     * A minimum timestamp the content is expected to be available through.
     * Servers *MAY* omit this field, if not known with confidence.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expires_at = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getExpiresAtFieldBuilder() {
      if (expiresAtBuilder_ == null) {
        expiresAtBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getExpiresAt(),
                getParentForChildren(),
                isClean());
        expiresAt_ = null;
      }
      return expiresAtBuilder_;
    }

    private build.bazel.remote.execution.v2.Digest blobDigest_;
    private com.google.protobuf.SingleFieldBuilderV3<
        build.bazel.remote.execution.v2.Digest, build.bazel.remote.execution.v2.Digest.Builder, build.bazel.remote.execution.v2.DigestOrBuilder> blobDigestBuilder_;
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     * @return Whether the blobDigest field is set.
     */
    public boolean hasBlobDigest() {
      return blobDigestBuilder_ != null || blobDigest_ != null;
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     * @return The blobDigest.
     */
    public build.bazel.remote.execution.v2.Digest getBlobDigest() {
      if (blobDigestBuilder_ == null) {
        return blobDigest_ == null ? build.bazel.remote.execution.v2.Digest.getDefaultInstance() : blobDigest_;
      } else {
        return blobDigestBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    public Builder setBlobDigest(build.bazel.remote.execution.v2.Digest value) {
      if (blobDigestBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        blobDigest_ = value;
        onChanged();
      } else {
        blobDigestBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    public Builder setBlobDigest(
        build.bazel.remote.execution.v2.Digest.Builder builderForValue) {
      if (blobDigestBuilder_ == null) {
        blobDigest_ = builderForValue.build();
        onChanged();
      } else {
        blobDigestBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    public Builder mergeBlobDigest(build.bazel.remote.execution.v2.Digest value) {
      if (blobDigestBuilder_ == null) {
        if (blobDigest_ != null) {
          blobDigest_ =
            build.bazel.remote.execution.v2.Digest.newBuilder(blobDigest_).mergeFrom(value).buildPartial();
        } else {
          blobDigest_ = value;
        }
        onChanged();
      } else {
        blobDigestBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    public Builder clearBlobDigest() {
      if (blobDigestBuilder_ == null) {
        blobDigest_ = null;
        onChanged();
      } else {
        blobDigest_ = null;
        blobDigestBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    public build.bazel.remote.execution.v2.Digest.Builder getBlobDigestBuilder() {
      
      onChanged();
      return getBlobDigestFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    public build.bazel.remote.execution.v2.DigestOrBuilder getBlobDigestOrBuilder() {
      if (blobDigestBuilder_ != null) {
        return blobDigestBuilder_.getMessageOrBuilder();
      } else {
        return blobDigest_ == null ?
            build.bazel.remote.execution.v2.Digest.getDefaultInstance() : blobDigest_;
      }
    }
    /**
     * <pre>
     * The result of the fetch, if the status had code `OK`.
     * The digest of the file's contents, available for download through the CAS.
     * </pre>
     *
     * <code>.build.bazel.remote.execution.v2.Digest blob_digest = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        build.bazel.remote.execution.v2.Digest, build.bazel.remote.execution.v2.Digest.Builder, build.bazel.remote.execution.v2.DigestOrBuilder> 
        getBlobDigestFieldBuilder() {
      if (blobDigestBuilder_ == null) {
        blobDigestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            build.bazel.remote.execution.v2.Digest, build.bazel.remote.execution.v2.Digest.Builder, build.bazel.remote.execution.v2.DigestOrBuilder>(
                getBlobDigest(),
                getParentForChildren(),
                isClean());
        blobDigest_ = null;
      }
      return blobDigestBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:build.bazel.remote.asset.v1.FetchBlobResponse)
  }

  // @@protoc_insertion_point(class_scope:build.bazel.remote.asset.v1.FetchBlobResponse)
  private static final build.bazel.remote.asset.v1.FetchBlobResponse DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new build.bazel.remote.asset.v1.FetchBlobResponse();
  }

  public static build.bazel.remote.asset.v1.FetchBlobResponse getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FetchBlobResponse>
      PARSER = new com.google.protobuf.AbstractParser<FetchBlobResponse>() {
    @java.lang.Override
    public FetchBlobResponse parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FetchBlobResponse(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FetchBlobResponse> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FetchBlobResponse> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public build.bazel.remote.asset.v1.FetchBlobResponse getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

